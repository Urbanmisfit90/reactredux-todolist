import { createSlice } from '@reduxjs/toolkit';

// Initial state for the todos
const initialState = {
  items: [], // Array to store todos
};

// Create a slice of the Redux state
const todoSlice = createSlice({
  name: 'todos', // Name of the slice
  initialState, // Initial state for this slice
  reducers: {
    // Action to add a new todo
    addTodo: (state, action) => {
      state.items.push(action.payload);
    },
    // Action to toggle the completion status of a todo
    toggleTodo: (state, action) => {
      const todo = state.items.find((todo) => todo.id === action.payload);
      if (todo) {
        todo.completed = !todo.completed;
      }
    },
    // Action to remove a todo
    removeTodo: (state, action) => {
      state.items = state.items.filter((todo) => todo.id !== action.payload);
    },
    // Action to edit a todo
    editTodo: (state, action) => {
      const { id, text } = action.payload;
      const todo = state.items.find((todo) => todo.id === id);
      if (todo) {
        todo.text = text;
      }
    },
  },
});

// Export the actions generated by createSlice
export const { addTodo, toggleTodo, removeTodo, editTodo } = todoSlice.actions;

// Export the reducer to be used in the store
export default todoSlice.reducer;
